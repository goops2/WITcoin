const Web3 = require('web3');
const web3 = new Web3('http://localhost:8545');
const Accounts = require('web3-eth-accounts');
const accounts = new Accounts('http://localhost:8545');
const express = require('express');
const app = express ();
const path = require('path');

// loads in the router module
var indexRouter = require('/home/delo/witcoin/routes/index');
app.use('/', indexRouter);


app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'pug');

// point to static files, other asignments for object 'app'
app.use(express.static(path.join(__dirname, 'public')));
app.use(express.json());


// print all the accounts running on testRPC

web3.eth.getAccounts().then(e => console.log(e));

/*
direct requests to localhost:3000 to form

app.get('/', (req, res) => {
  res.sendFile('/home/delo/witcoin/public/html/index.html')
})
*/

/* test contract definition


var contract = new web3.eth.Contract(
  [
	{
		"constant": false,
		"inputs": [
			{
				"name": "_newGreet",
				"type": "string"
			}
		],
		"name": "setGreet",
		"outputs": [],
		"payable": false,
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [],
		"name": "getGreet",
		"outputs": [
			{
				"name": "",
				"type": "string"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	}
], '0x949e779ef1fe5c2801444f81fee1ea6e6d42bb16',
   {
     from: '0x40B7e6e86FDFC6a42420691F02132f00D1024ced',
     data: '0x60606040526040805190810160405280600b81526020017f68656c6c6f20636c6173730000000000000000000000000000000000000000008152506000908051906020019061004f929190610060565b50341561005b57600080fd5b610105565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100a157805160ff19168380011785556100cf565b828001600101855582156100cf579182015b828111156100ce5782518255916020019190600101906100b3565b5b5090506100dc91906100e0565b5090565b61010291905b808211156100fe5760008160009055506001016100e6565b5090565b90565b6102e3806101146000396000f30060606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680639698086b14610051578063d705a4b5146100ae575b600080fd5b341561005c57600080fd5b6100ac600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190505061013c565b005b34156100b957600080fd5b6100c1610156565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101015780820151818401526020810190506100e6565b50505050905090810190601f16801561012e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b80600090805190602001906101529291906101fe565b5050565b61015e61027e565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101f45780601f106101c9576101008083540402835291602001916101f4565b820191906000526020600020905b8154815290600101906020018083116101d757829003601f168201915b5050505050905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061023f57805160ff191683800117855561026d565b8280016001018555821561026d579182015b8281111561026c578251825591602001919060010190610251565b5b50905061027a9190610292565b5090565b602060405190810160405280600081525090565b6102b491905b808211156102b0576000816000905550600101610298565b5090565b905600a165627a7a723058209a6fc1df78c8b10caddec18d359943bf986cdf02448515648cfd9fd74ded085f0029',
     gas: '4700000'
   }
)

web3.eth.accounts.create().then(e => console.log(e));

contract.methods.getGreet().call().then(e => console.log(e));
contract.methods.setGreet('Hey Evan').send(0x125Fad7eE245F459c05006B5812d427E1A680a58);
*/


//deploy the Contract
//contract.deploy().send();

// create the server
app.listen(3000);
